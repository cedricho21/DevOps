stages:
  - build
  - code_style_check
  - testing
  - deploy

build:
  stage: build
  script:
    - cd src
    - make
  artifacts:
    paths:
      - src/cat/test_cat/s21_cat
      - src/grep/s21_grep
    expire_in: 30 days
  after_script:
    - if [ $CI_JOB_STATUS == "failed" ]; then cd src; bash notify.sh "CI" "$CI_JOB_STATUS (build)"; fi

code_style_check:
  stage: code_style_check
  script:
    - cd src/cat
    - output=$(clang-format -style=google -Werror -n *.c *.h)
    - if [ -n "$output" ]; then echo "$output"; exit 1; fi
    - cd ../grep
    - output=$(clang-format -style=google -Werror -n *.c *.h)
    - if [ -n "$output" ]; then echo "$output"; exit 1; fi
  after_script:
    - if [ $CI_JOB_STATUS == "failed" ]; then cd src; bash notify.sh "CI" "$CI_JOB_STATUS (code_style)"; fi

testing:
  stage: testing
  script:
    - cd src/cat/test_cat
    - bash test_func_cat.sh  
  dependencies:
    - build
    - code_style_check
  after_script:
    - if [ $CI_JOB_STATUS == "failed" ]; then cd src; bash notify.sh "CI" "$CI_JOB_STATUS (testing)"; else bash notify.sh "CI" $CI_JOB_STATUS; fi

deploy:
  stage: deploy
  script:
    - sshpass -p "student" scp src/cat/test_cat/s21_cat student@172.24.116.8:/usr/local/bin
    - sshpass -p "student" scp src/grep/s21_grep student@172.24.116.8:/usr/local/bin
  when: manual
  dependencies:
    - build
    - code_style_check
    - testing
  after_script:
    - cd src
    - bash notify.sh "CD" $CI_JOB_STATUS
